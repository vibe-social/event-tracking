{
    "swagger": "2.0",
    "info": {
        "description": "Event tracking documentation for the social networking app focused on sharing vibes.",
        "title": "Event Tracking API Documentation",
        "contact": {
            "name": "Rok Mokotar",
            "url": "https://www.linkedin.com/in/mokot/",
            "email": "rm6551@student.uni-lj.si"
        },
        "version": "1.0"
    },
    "paths": {
        "/events": {
            "get": {
                "description": "get events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "List events",
                "operationId": "get-events",
                "responses": {}
            },
            "post": {
                "description": "create event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create event",
                "operationId": "create-event",
                "parameters": [
                    {
                        "description": "Event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateEventRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/events/{id}": {
            "get": {
                "description": "get event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event",
                "operationId": "get-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "delete event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Delete event",
                "operationId": "delete-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "patch": {
                "description": "update event",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Update event",
                "operationId": "update-event",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Event",
                        "name": "event",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateEventRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/health": {
            "get": {
                "description": "health check",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "operationId": "health-check",
                "responses": {}
            }
        },
        "/health/general": {
            "get": {
                "description": "general health check",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "General health check",
                "operationId": "health-check-general",
                "responses": {}
            }
        },
        "/metrics": {
            "get": {
                "description": "Prometheus metrics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "metrics"
                ],
                "summary": "Prometheus metrics",
                "operationId": "prometheus-metrics",
                "responses": {}
            }
        }
    },
    "definitions": {
        "controllers.CreateEventRequest": {
            "type": "object",
            "required": [
                "content",
                "type",
                "user_id"
            ],
            "properties": {
                "content": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "controllers.UpdateEventRequest": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        }
    }
}